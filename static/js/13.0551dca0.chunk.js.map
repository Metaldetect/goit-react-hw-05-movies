{"version":3,"file":"static/js/13.0551dca0.chunk.js","mappings":"kTAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,cACxBG,EADwB,OAIxBC,EAAWD,EAASE,KAAKC,QAJD,kBAKvBF,GALuB,2CAAH,qDAQhBG,EAAkB,mCAAG,WAAMC,GAAN,yFACTN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CQ,EAD/C,gCADS,cAC1BL,EAD0B,OAI1BG,EAAUH,EAASE,KAAKC,QAJE,kBAKzBA,GALyB,2CAAH,sDAQlBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,oBACmBV,EADnB,oBADQ,cACzBG,EADyB,OAIzBC,EAAWD,EAASE,KAJK,kBAKxBD,GALwB,2CAAH,sDAQjBO,EAAc,mCAAG,WAAMD,GAAN,yFACLR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BV,EAD3B,oBADK,cACtBG,EADsB,OAItBC,EAAWD,EAASE,KAAKO,KAJH,kBAKrBR,GALqB,2CAAH,sDAQdS,EAAiB,mCAAG,WAAMH,GAAN,yFACRR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAW,EADA,4BAC2BV,EAD3B,2BADQ,cACzBG,EADyB,OAIzBC,EAAWD,EAASE,KAAKC,QAJA,kBAKxBF,GALwB,2CAAH,qD,mMClCjBU,EAAuBC,EAAAA,EAAAA,IAAH,mFAMpBC,EAAkBD,EAAAA,EAAAA,GAAH,yFAMfE,EAAOF,EAAAA,EAAAA,GAAH,6CAIJG,EAAOH,EAAAA,EAAAA,GAAH,6PAcJI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,mI,gKCKvB,EA1BmB,SAAC,GAAqB,IAAnBM,EAAkB,EAAlBA,YACpB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,+BACA,SAAC,KAAD,UACGA,EAAYC,KAAI,SAAAC,GAAU,OACzB,SAAC,KAAD,WACE,UAAC,KAAD,CAAYC,GAAE,kBAAaD,EAAWE,IAAtC,WACE,SAAC,MAAD,IADF,IACcF,EAAWG,UAFhBH,EAAWE,GADG,QAUlC,E,UCWD,EAjCa,WACX,OAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAON,EAAP,KAAoBO,EAApB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAa,GAFC,UAGO7B,EAAAA,EAAAA,MAHP,OAGRkC,EAHQ,OAIdP,EAAeO,GACfL,GAAa,GALC,gDAOdE,GAAS,GACTF,GAAa,GARC,yDAAH,qDAWfI,GACD,GAAE,KAGD,8BACGL,GACC,SAAC,IAAD,IACEE,GACF,+CAEA,SAAC,EAAD,CAAYV,YAAaA,KAIhC,C","sources":["Api/Api.js","components/MoviesList/MoviesListStyles.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '4b34cc9253777dc6fec5c1871a98544b';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  const products = response.data.results;\n  return products;\n};\n\nexport const searchMoviesByName = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  const results = response.data.results;\n  return results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  const products = response.data;\n  return products;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const products = response.data.cast;\n  return products;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const products = response.data.results;\n  return products;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ProductListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n`;\n\nexport const TrendingHeading = styled.h2`\n  font-size: 24px;\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  margin: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  text-decoration: none;\n  color: #333;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  text-decoration: none;\n  color: inherit;\n  gap: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ProductListContainer,\n  TrendingHeading,\n  Item,\n  List,\n  StyledLink,\n} from './MoviesListStyles';\n\nimport { BsFilm } from 'react-icons/bs';\n\nconst MoviesList = ({ trendMovies }) => {\n  return (\n    <ProductListContainer>\n      <TrendingHeading>Trending Movies</TrendingHeading>\n      <List>\n        {trendMovies.map(trendMovie => (\n          <Item key={trendMovie.id}>\n            <StyledLink to={`/movies/${trendMovie.id}`}>\n              <BsFilm /> {trendMovie.title}\n            </StyledLink>\n          </Item>\n        ))}\n      </List>\n    </ProductListContainer>\n  );\n};\n\nMoviesList.propTypes = {\n  trendMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import React, { useEffect, useState } from 'react';\nimport { fetchTrendMovies } from 'Api/Api';\nimport MoviesList from 'components/MoviesList';\nimport LoadingSpinner from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await fetchTrendMovies();\n        setTrendMovies(movies);\n        setIsLoading(false);\n      } catch (error) {\n        setError(true);\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : error ? (\n        <p>Error loading data</p>\n      ) : (\n        <MoviesList trendMovies={trendMovies} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["BASE_URL","API_KEY","fetchTrendMovies","axios","response","products","data","results","searchMoviesByName","query","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","ProductListContainer","styled","TrendingHeading","List","Item","StyledLink","Link","trendMovies","map","trendMovie","to","id","title","useState","setTrendMovies","isLoading","setIsLoading","error","setError","useEffect","fetchData","movies"],"sourceRoot":""}